name: Build, Tag, and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Configure Git
        run: |
          git config --global user.email "info@scgis.org"
          git config --global user.name "SCGIS Wales"

      - name: Create Git tag
        run: |
          git tag -a "v1.2.3" -m "Release version 1.2.3" || echo "Tag already exists"
          git push origin "v1.2.3" || echo "Tag already pushed"

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Check if GitHub release exists
        id: check_release
        run: |
          if gh release view "v1.2.3"; then
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        if: env.RELEASE_EXISTS == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v1.2.3"
          release_name: "Release 1.2.3"
          body: "Release of version 1.2.3"
          draft: false
          prerelease: false

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKER_HUB_USERNAME }}/springboot-demo:1.2.3

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/springboot-demo:1.2.3
